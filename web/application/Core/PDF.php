<?php
namespace Ssg\Core;

use Fpdf\FPDF;

class PDF extends FPDF
{
	protected $header_text; // text to appear at the header of the page
	protected $footer_text; // text to appear at the bottom of the page
	protected $col_headers; // the table headers (headig for each column)
	protected $col_sizes; // array that has the sizes of each column
	protected $col_max_lengs; // the array 
	protected $data; //data to be displayed in the table
	
	public function __construct($title, $data, $headers, $sizes, $max_lengths)
	{
		parent::__construct();
		$this->header_text = $title;
		$this->footer_text = "Generated by [".Session::get('user_name')."] on [".date("l jS \of F Y h:i:s A")."] - ".Config::get('VERSION');
		$this->data = $data;
		$this->col_headers = $headers;
		$this->col_sizes = $sizes;
		$this->col_max_lengs = $max_lengths;
		$this->SetTitle($title);
		$this->SetAuthor(Session::get('user_name'));
		$this->AliasNbPages();
		$this->SetFont('Arial','',8);
		$this->AddPage();
		$this->renderTable();
    }
	
	public function setHeaderText($text)
	{
		$this->header_text = $text;
	}
	
	public function setFooterText($text)
	{
		$this->footer_text = $text;
	}
	
	public function setColumnHeaders($headers)
	{
		$this->col_headers = $headers;
	}
	
	public function setColumnSizes($sizes)
	{
		$this->col_sizes = $sizes;
	}
	
	public function setColumnMaxLengths($max_lengths)
	{
		$this->col_max_lengs = $max_lengths;
	}
	
	public function setData($data)
	{
		$this->data = $data;
	}
	
	function Header()
	{
		$this->SetFont('Arial','B',10);
		$this->Cell(0,10,$this->header_text,0,0,'C');
		$this->Ln(15);
	}
	
	function Footer()
	{
		$this->SetY(-15);
		$this->SetFont('Arial','I',8);
		$this->Cell(0,10,'Page '.$this->PageNo().'/{nb}',0,0,'L');
		$this->Cell(0,10,$this->footer_text,0,0,'R');
	}
	
	public function renderTable()
	{
		// colours and font for table header
		$this->SetFillColor(240,240,240);
		$this->SetTextColor(70);
		$this->SetDrawColor(238,238,238);
		$this->SetLineWidth(.3);
		$this->SetFont('','B');
		
		// render table header
		$col_count = count($this->col_headers);
		for ($i=0; $i< $col_count ; $i++) {
			$this->Cell($this->col_sizes[$i],7,$this->col_headers[$i],1,0,'L',true);
		}
		$this->Ln();

		// color and font restoration for main body
		$this->SetFillColor(248,248,248);
		$this->SetTextColor(70);
		$this->SetFont('');

		// process table data
		$fill = false;
		foreach ($this->data as $row) {
			
			for ($i=0; $i< $col_count ; $i++) {
				
				//process the data
				$col_data = '';
				if(strlen($row[$i]) > $this->col_max_lengs[$i]) {
					$col_data = substr($row[$i], 0, $this->col_max_lengs[$i]).'...';
				} else {
					$col_data = $row[$i];
				}
				$this->Cell($this->col_sizes[$i],6,$col_data,'LR',0,'L',$fill);
			}
			$this->Ln();
			$fill = !$fill;
		}
		
		// Closing line
		$this->Cell(array_sum($this->col_sizes),0,'','T');
	}
}
